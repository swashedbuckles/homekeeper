name: Run Tests

on:
  pull_request:
    branches: [ mainline ]

jobs:
  # Option 1: Sequential approach (simpler, uses your existing workspace setup)
  test-sequential:
    name: Run All Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build shared package
        run: npm run build -w shared
      
      - name: Run backend tests
        run: npm run test:run -w backend
        env:
          NODE_ENV: test
      
      - name: Run frontend tests
        run: npm run test:run -w frontend

      - name: Run frontend checks
        run: npm run type-check -w frontend && npm run lint -w frontend

  # Option 2: Parallel approach (faster, but more complex)
  # Uncomment this section and comment out the above if you prefer parallel execution
  
  # build-shared:
  #   name: Build Shared Package
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #         cache: 'npm'
  #         cache-dependency-path: 'package-lock.lock'
  #     
  #     - name: Install dependencies
  #       run: npm ci
  #     
  #     - name: Build shared package
  #       run: npm run build -w shared
  #     
  #     - name: Upload shared build
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: shared-build
  #         path: shared/dist/
  #         retention-days: 1

  # frontend-tests:
  #   name: Frontend Tests
  #   runs-on: ubuntu-latest
  #   needs: build-shared
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #         cache: 'npm'
  #         cache-dependency-path: 'package-lock.json'
  #     
  #     - name: Install dependencies
  #       run: npm ci
  #     
  #     - name: Download shared build
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: shared-build
  #         path: shared/dist/
  #     
  #     - name: Run frontend tests
  #       run: npm run test:run -w frontend

  # backend-tests:
  #   name: Backend Tests  
  #   runs-on: ubuntu-latest
  #   needs: build-shared
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #         cache: 'npm'
  #         cache-dependency-path: 'package-lock.json'
  #     
  #     - name: Install dependencies
  #       run: npm ci
  #     
  #     - name: Download shared build
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: shared-build
  #         path: shared/dist/
  #     
  #     - name: Run backend tests
  #       run: npm run test:run -w backend
  #       env:
  #         NODE_ENV: test
